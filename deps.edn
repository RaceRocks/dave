{:deps {org.clojure/clojure {:mvn/version "1.10.0"}
        org.clojure/clojurescript {:mvn/version "1.10.520"}
        org.clojure/core.async {:mvn/version "0.4.490"}
        reagent/reagent {:mvn/version "0.8.1"}
        re-frame/re-frame {:mvn/version "0.10.6"}
        com.yetanalytics/xapi-schema
        {:git/url "https://github.com/yetanalytics/xapi-schema.git"
         :sha "f045cdb9e8fc23ec90d4ee043fdea7b6613667d1"}
        com.cognitect/transit-cljs {:mvn/version "0.8.256"}
        cljsjs/vega {:mvn/version "5.9.0-0"}
        cljsjs/vega-tooltip {:mvn/version "0.20.0-0"}
        cljs-http/cljs-http {:mvn/version "0.1.45"}
        clj-http/clj-http {:mvn/version "3.9.1"}
        com.andrewmcveigh/cljs-time {:mvn/version "0.5.2"}
        clj-time/clj-time {:mvn/version "0.15.0"}
        org.clojure/data.json {:mvn/version "0.2.6"}
        net.cgrand/macrovich {:mvn/version "0.2.1"}
        re-codemirror/re-codemirror        {:git/url    "https://github.com/yetanalytics/re-codemirror.git"
                              :sha        "ae0c0437bb3cd20d9cc49db5f444c0e3c7ca5c2f"
                              :exclusions [org.clojure/clojurescript
                                           reagent/reagent
                                           deraen/sass4clj]}
        datascript/datascript {:mvn/version "0.18.8"}
        datascript-transit/datascript-transit {:mvn/version "0.3.0"}}
 :paths ["src" "resources" "target"]
 :aliases {:fig {:extra-deps
                 {com.bhauman/rebel-readline-cljs {:mvn/version "0.1.4"}
                  com.bhauman/figwheel-main {:mvn/version "0.2.18"}
                  day8.re-frame/re-frame-10x {:mvn/version "0.3.3-react16"}
                  cheshire/cheshire {:mvn/version "5.8.1"}
                  org.clojure/test.check {:mvn/version "0.10.0-alpha3"}}
                 :extra-paths ["target" "test" "dev"]}
           :watch-sass {:extra-deps
                        {com.yetanalytics/sassenach {:git/url "https://github.com/RaceRocks/sassenach.git"
                              :sha "93641a125aca6ff6c98ab51ee9c978baa242e4fe"}}
                        :main-opts ["-m" "com.yetanalytics.sassenach"
                                    ;; input path
                                    "resources/dave/ui/sass/style.scss"
                                    ;; output path
                                    "resources/public/css/style.css"
                                    "node_modules"]}
           :build {:main-opts ["-m" "figwheel.main" "-b" "dev" "-r"]}

           :test-cljs
           {;; :extra-deps {org.clojure/test.check {:mvn/version "0.10.0-alpha3"}}
            :main-opts ["-m" "figwheel.main" "-co" "test.cljs.edn" "-m" "com.yetanalytics.dave.test-runner"]}
           :test-clj
           {:extra-paths ["test"]
            :extra-deps {org.clojure/test.check {:mvn/version "0.10.0-alpha3"}
                         com.cognitect/test-runner
                         {:git/url "https://github.com/cognitect-labs/test-runner.git"
                          :sha "cb96e80f6f3d3b307c59cbeb49bb0dcb3a2a780b"}}
            :main-opts ["-m" "cognitect.test-runner"]}
           ;; for building a static html/js page
           :build-prod
           {:extra-deps {com.bhauman/figwheel-main {:mvn/version "0.2.18"}}
            :main-opts ["-m" "figwheel.main" "-O" "simple" "-bo" "prod"]}
           ;; same as build-prod, but launches a figwheel server to debug/preview
           :build-prod-server
           {:extra-deps {com.bhauman/figwheel-main {:mvn/version "0.2.18"}}
            :main-opts ["-m" "figwheel.main" "-O" "simple" "-bo" "prod" "-s"]}
           ;; run sass compilation once, sans source-map
           :build-sass
           {:extra-deps {deraen/sass4clj {:mvn/version "0.6.0"}}
            :main-opts ["-e" "(require,'sass4clj.core),(sass4clj.core/sass-compile-to-file,\"resources/dave/ui/sass/style.scss\",\"resources/public/css/style.css\",{:source-map,false,:source-paths,[\"node_modules\"]})"]}}}
